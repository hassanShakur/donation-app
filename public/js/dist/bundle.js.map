{"mappings":"AEAO,MAAM,4CAAY,CAAC,MAAM;IAC9B;IACA,MAAM,SAAS,CAAC,yBAAyB,EAAE,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC;IAC/D,SACG,aAAa,CAAC,QACd,kBAAkB,CAAC,cAAc;IACpC,OAAO,UAAU,CAAC,2CAAW;AAC/B;AAEO,MAAM,4CAAY;IACvB,MAAM,KAAK,SAAS,aAAa,CAAC;IAClC,IAAI,IAAI,GAAG,aAAa,CAAC,WAAW,CAAC;AACvC;;;ADVO,MAAM,4CAAY,OAAO,OAAO;IACrC,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,mBAAmB;YACzC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;uBAAE;0BAAO;YAAS;YACvC,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ,GAAG,CAAC;QAEZ,IAAI,KAAK,MAAM,KAAK,WAAW;YAC7B,CAAA,GAAA,yCAAQ,EAAE,WAAW;YACrB,OAAO,UAAU,CAAC;gBAChB,KAAK,IAAI,CAAC,IAAI,KAAK,UACf,SAAS,MAAM,CAAC,gBAChB,SAAS,MAAM,CAAC;YACtB,GAAG;QACL,OACE,CAAA,GAAA,yCAAQ,EAAE,SAAS,KAAK,OAAO;IAEnC,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,IAAI,OAAO,CAAC,CAAC;IACjD;AACF;;;AE1BO,MAAM,2CAAe,OAAO,SACjC,KAAK,SACL,KAAK,SACL,KAAK,YACL,QAAQ,EACT;IACC,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,sBAAsB;YAC5C,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;uBAAE;uBAAO;uBAAO;0BAAO;YAAS;YACrD,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ,GAAG,CAAC;QAEZ,IAAI,KAAK,MAAM,KAAK,WAClB,KAAK,IAAI,CAAC,IAAI,KAAK,UACf,SAAS,MAAM,CAAC,gBAChB,SAAS,MAAM,CAAC;aAEpB,MAAM,IAAI,MAAM,KAAK,OAAO;IAEhC,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,IAAI,OAAO,CAAC,CAAC;IACjD;AACF;;;AH1BA,MAAM,kCAAY,SAAS,aAAa,CAAC;AACzC,MAAM,qCAAe,SAAS,aAAa,CAAC;AAK5C,iCAAW,iBAAiB,UAAU,CAAC;IACrC,EAAE,cAAc;IAEhB,MAAM,QAAQ,gCAAU,aAAa,CAAC,UAAU,KAAK;IACrD,MAAM,WAAW,gCAAU,aAAa,CAAC,aAAa,KAAK;IAC3D,CAAA,GAAA,yCAAQ,EAAE,OAAO;AACnB;AAEA,oCAAc,iBAAiB,UAAU,CAAC;IACxC,EAAE,cAAc;IAEhB,MAAM,QAAQ,mCAAa,aAAa,CAAC,UAAU,KAAK;IACxD,MAAM,QAAQ,mCAAa,aAAa,CAAC,UAAU,KAAK;IACxD,MAAM,QAAQ,mCAAa,aAAa,CAAC,UAAU,KAAK;IACxD,MAAM,WAAW,mCAAa,aAAa,CAAC,aAAa,KAAK;IAE9D,CAAA,GAAA,wCAAW,EAAE;eAAE;eAAO;eAAO;kBAAO;IAAS;AAC/C","sources":["public/js/index.js","public/js/login.js","public/js/alert.js","public/js/register.js"],"sourcesContent":["const loginForm = document.querySelector('#login-form');\r\nconst registerForm = document.querySelector('#register-form');\r\n\r\nimport { loginUser } from './login.js';\r\nimport { registerUser } from './register.js';\r\n\r\nloginForm?.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n\r\n  const email = loginForm.querySelector('#email').value;\r\n  const password = loginForm.querySelector('#password').value;\r\n  loginUser(email, password);\r\n});\r\n\r\nregisterForm?.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n\r\n  const fname = registerForm.querySelector('#fname').value;\r\n  const lname = registerForm.querySelector('#lname').value;\r\n  const email = registerForm.querySelector('#email').value;\r\n  const password = registerForm.querySelector('#password').value;\r\n\r\n  registerUser({ fname, lname, email, password });\r\n});\r\n","import { showAlert } from './alert.js';\r\n\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const res = await fetch('/api/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    if (data.status === 'success') {\r\n      showAlert('success', 'Logged in successfully!');\r\n      window.setTimeout(() => {\r\n        data.user.role === 'admin'\r\n          ? location.assign('/dashboard')\r\n          : location.assign('/');\r\n      }, 1500);\r\n    } else {\r\n      showAlert('error', data.message);\r\n    }\r\n  } catch (err) {\r\n    console.log(`An error occurred: ${err.message}`);\r\n  }\r\n};\r\n","export const showAlert = (type, msg) => {\r\n  hideAlert();\r\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n  document\r\n    .querySelector('body')\r\n    .insertAdjacentHTML('afterbegin', markup);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n\r\nexport const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\n","export const registerUser = async ({\r\n  fname,\r\n  lname,\r\n  email,\r\n  password,\r\n}) => {\r\n  try {\r\n    const res = await fetch('/api/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ fname, lname, email, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    if (data.status === 'success') {\r\n      data.user.role === 'admin'\r\n        ? location.assign('/dashboard')\r\n        : location.assign('/home');\r\n    } else {\r\n      throw new Error(data.message);\r\n    }\r\n  } catch (err) {\r\n    console.log(`An error occurred: ${err.message}`);\r\n  }\r\n};\r\n"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../../"}